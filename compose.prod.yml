services:
  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - statcraft

  backend:
    build:
      context: ./backend
    ports:
      - 8000:8000
    volumes:
      - static_data:/app/static
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - statcraft

  frontend:
    build:
      context: ./frontend
      target: prod
    volumes:
      - frontend-build:/usr/share/nginx/html
    env_file:
      - ./.env
    networks:
      - statcraft

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/prod.conf:/etc/nginx/conf.d/prod.conf
      - /etc/letsencrypt/live:/etc/letsencrypt/live
      - /etc/letsencrypt/archive:/etc/letsencrypt/archive
      - static_data:/app/static
      - frontend-build:/usr/share/nginx/html
    ports:
      - 80:80
      - 443:443
    depends_on:
      - backend
      - frontend
    networks:
      - statcraft

networks:
  statcraft:

volumes:
  db-data:
  static_data:
  frontend-build:
