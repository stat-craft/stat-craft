services:
  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER} 
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - statcraft
        
  adminer:
      image: adminer
      restart: always
      ports:
        - 8080:8080

  backend:
    build:
      context: ./backend
    command: gunicorn statCraft.wsgi:application --bind 0.0.0.0:8000
    ports:
      - 8000:8000
    volumes:
      - ./backend/:/app
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - statcraft

  frontend:
    build:
      context: ./frontend
    command: npm run dev
    ports:
      - 3000:3000
    volumes:
      - ./frontend/:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - ./.env
    networks:
      - statcraft
    
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    depends_on:
      - backend
      - frontend
    networks:
      - statcraft

networks:
  statcraft:

volumes:
  db-data:
